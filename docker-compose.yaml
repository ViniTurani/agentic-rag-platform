services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - my-network

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-10T01-41-38Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - my-network

  milvus:
    image: milvusdb/milvus:v2.6.0
    container_name: milvus-standalone
    command: milvus run standalone
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    shm_size: "1g"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    restart: unless-stopped
    networks:
      - my-network

  mongo:
    image: mongo:latest
    container_name: local_mongo
    networks:
      - my-network
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  api:
    build: .
    container_name: agentic-rag
    env_file: ./environments/.env
    depends_on:
      mongo:
        condition: service_started
      milvus:
        condition: service_healthy
    networks:
      - my-network
    develop:
      watch:
        - path: ./app
          action: sync
          target: /project/app
    environment:
      LOGURU_COLORIZE: YES

  api-debug:
    extends:
      service: api
    build:
      target: debug
    ports:
      - "5678:5678"
      - "8000:8000"
    restart: unless-stopped
    environment:
      LOGURU_COLORIZE: YES

volumes:
  etcd-data:
  minio-data:
  milvus-data:
  mongo-data:

networks:
  my-network:
    name: my-network
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.3.0/24
